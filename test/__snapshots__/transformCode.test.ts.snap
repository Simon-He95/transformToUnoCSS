// Vitest Snapshot v1

exports[`single demo classWeight > classWeight.vue 1`] = `
"<script setup lang=\\"ts\\">
const nihao = ref(true)
</script>
<template>
  <div class=\\"red h-[100%] scale-150 bg-yellow w-[100%]\\" :class=\\"[nihao?'w-10':'bg-red']\\">
    nihao
  </div>
  <div>hi</div>
</template>
<style scoped></style>
"
`;

exports[`transformCode > transformCode: all 1`] = `
[
  "

-----    classAdd.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div bg-red w=\\"[100%]\\" lh-20px class=\\"red\\">
    nihao
  </div>
  <div bg-yellow! w=\\"[100%]\\" h=\\"[100%]\\" class=\\"yellow\\">
    hi
  </div>
</template>
<style scoped></style>
",
  "

-----    classAttribute.vue     -------

<script setup lang=\\"ts\\"></script>

<template>
  <div w=\\"[100%]\\" h=\\"[100%]\\" class=\\"red\\" name=\\"hi\\" haha>
    nihao
  </div>
  <div h=\\"[100%]\\" class=\\"yellow\\">
    hi
  </div>
</template>

<style scoped>
.red[haha] {
  background-color: red;
}
</style>
",
  "

-----    classChild.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div bg-red w=\\"[100%]\\" lh-20px class=\\"red\\">
    <div bg-red w=\\"[100%]\\" class=\\"yellow\\">
      hi
    </div>
  </div>
</template>
<style scoped></style>
",
  "

-----    classCombine.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div bg-red w=\\"[100%]\\" lh-20px>
    <div bg-red w=\\"[100%]\\" class=\\"red yellow\\">
      hi
    </div>
  </div>
</template>
<style scoped></style>
",
  "

-----    classSpace.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div bg-red w=\\"[100%]\\" lh-20px class=\\"red\\">
    <div bg-red! w=\\"[100%]\\" class=\\"yellow\\">
      hi
    </div>
  </div>
</template>
<style scoped></style>
",
  "

-----    classTail.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div focus-within=\\"bg-red w-\\"[100%]\\"\\" class=\\"container\\">
    <div bg-red w=\\"[100%]\\" lh-20px class=\\"red\\">
      nihao
    </div>
    <div class=\\"yellow\\">
      hi
    </div>
  </div>
</template>
<style scoped></style>
",
  "

-----    classWeight.vue     -------

<script setup lang=\\"ts\\">
const nihao = ref(true)
</script>
<template>
  <div bg-yellow w=\\"[100%]\\" h=\\"[100%]\\" scale=\\"150\\" class=\\"red\\" :class=\\"[nihao?'w-10':'bg-red']\\">
    nihao
  </div>
  <div>hi</div>
</template>
<style scoped></style>
",
  "

-----    hover.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div bg-red w=\\"[100%]\\" lh-20px>
    <div hover=\\"text-yellow\\" class=\\"red\\">
      hi
    </div>
  </div>
</template>
<style scoped></style>
",
  "

-----    less.vue     -------

<template>
	<div mx-auto my-0 border-1px border-solid border=\\"[#f00]\\" flex justify-center flex-col items-center class=\\"box\\">
		<UsePinia />
		<br />
		<router-link to=\\"/login\\">点击跳转至login</router-link>
	</div>
</template>
<script lang=\\"ts\\">
import { defineComponent } from 'vue';
export default defineComponent({
	name: 'index',
	components: {
	},
	setup() {
		const state = reactive({
			test: 'index',
		})
		return {
			...toRefs(state),
		}
	}
});
</script>
<style scoped></style>
",
  "

-----    media.vue     -------

<script setup lang=\\"ts\\"></script>

<template>
  <div max-2xl:bg-red sm:bg-red class=\\"red\\">
    nihao
  </div>
</template>

<style scoped>
@media (min-width: 120px) {
  .red {
    background-color: red;
  }
}
</style>
",
  "

-----    sass.vue     -------

<script setup lang=\\"ts\\">
// This starter template is using Vue 3 <script setup> SFCs
// Check out https://vuejs.org/api/sfc-script-setup.html#script-setup
</script>

<template>
  <RouterView></RouterView>
</template>

<style>
.size, html #app,
body #app, html,
body {
  width: 100%;
  height: 100%;
}
html,
body {
  padding: 0 !important;
  margin: 0;
  overflow: hidden;
}
.namespace-app-grey-mode {
  filter: grayscale(100%);
}
</style>
",
  "

-----    styleMaxWidth.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div class=\\"red\\">
    nihao
  </div>
  <div max-w=\\"[calc(100%-50px)]\\" bg=\\"[rgba(255,62,0,0.1)]\\" class=\\"yellow\\">
    hi
  </div>
</template>
<style scoped></style>
",
  "

-----    styleWeight.vue     -------

<script setup lang=\\"ts\\"></script>
<template>
  <div bg-pink style=\\"hi:123\\" class=\\"red\\">
    nihao
  </div>
  <div bg-yellow class=\\"yellow\\" >
    hi
  </div>
</template>
<style scoped></style>
",
  "

-----    stylus.vue     -------

<script setup lang=\\"ts\\">
// This starter template is using Vue 3 <script setup> SFCs
// Check out https://vuejs.org/api/sfc-script-setup.html#script-setup
</script>

<template>
  <RouterView></RouterView>
</template>

<style>
.size,
html,
body,
html #app,
body #app {
  width: 100%;
  height: 100%;
}
html,
body {
  padding: 0 !important;
  margin: 0;
  overflow: hidden;
}
</style>
",
  "

-----    test.vue     -------

<template>
  <button h-32px hover=\\"bg-#67c23a\\" text-red w=\\"[100%]\\">button</button>
</template>
<style scoped></style>
",
  "

-----    vue.tsx     -------

import { defineComponent, ref } from 'vue'
import './index.css'

export const component = defineComponent({
  name: 'Component',
  props: {
    title: {
      type: String,
      default: '',
    },
    content: {
      type: String,
      default: '',
    },
  },
  setup(props) {
    const count = ref(0)
    const increment = () => count.value++
    return () => (
      <div>
        <h1 className=\\"red bg-red\\" style=\\"hi:123\\">{props.title}</h1>
        <p>{props.content}</p>
        <div onClick={increment}>
          count: {count.value}
        </div>
      </div>
    )
  },
})
",
]
`;
